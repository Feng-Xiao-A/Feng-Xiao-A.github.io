[{"title":"Test/CN","url":"/2022/04/26/CN/","content":"今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子 今天是个好日子\n","categories":["B"],"tags":["PS3","Games"]},{"title":"Test/E","url":"/2022/04/26/E/","content":"abc\nabc\nabc\nabc\nabc\nabc\nabc\nabc\nabc\nabc\n\n概念\n先验概率/后验概率/类条件密度\n贝叶斯决策：\n\n两类问题，错误率定义为所有服从同样分布的独立样本上错误概率的期望,正确率 如果决策如果决策\n最小错误率贝叶斯决策\n则\n后验概率可由贝叶斯公式求得  引入似然比阀值，决策规则整理成： 则 常引入对数似然比 则 利用贝叶斯公式求得决策线/决策面：\n","categories":["B"],"tags":["PS3","Games"]},{"title":"Test","url":"/2022/04/26/Test/","content":"主要内容\n\nMarkdown是什么？\n谁创造了它？\n为什么要使用它？\n怎么使用？\n谁在用？\n尝试一下\n\n正文\n1. Markdown是什么？\nMarkdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。\nMarkdown也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。\n2. 谁创造了它？\n它由Aaron Swartz和John Gruber共同设计，Aaron Swartz就是那位于去年（2013年1月11日）自杀,有着开挂一般人生经历的程序员。维基百科对他的介绍是：软件工程师、作家、政治组织者、互联网活动家、维基百科人。\n他有着足以让你跪拜的人生经历：\n+ 14岁参与RSS 1.0规格标准的制订。\n+ 2004年入读斯坦福，之后退学。\n+ 2005年创建Infogami，之后与Reddit合并成为其合伙人。\n+ 2010年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。\n+ 2011年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。\n+ 2013年1月自杀身亡。\n\nAaron Swartz\n\n天才都有早逝的归途。\n3. 为什么要使用它？\n\n它是易读（看起来舒服）、易写（语法简单）、易更改纯文本。处处体现着极简主义的影子。\n兼容HTML，可以转换为HTML格式发布。\n跨平台使用。\n越来越多的网站支持Markdown。\n更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）\n摆脱Word（我不是认真的）。\n\n4. 怎么使用？\n如果不算扩展，Markdown的语法绝对简单到让你爱不释手。\nMarkdown语法主要分为如下几大部分： 标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \\，符号'`'。\n4.1 标题\n两种形式：\n1）使用=和-标记一级和二级标题。 &gt; 一级标题\n&gt; =========\n&gt; 二级标题\n&gt; ---------\n效果： &gt; 一级标题\n&gt; =========\n&gt; 二级标题 &gt; ---------\n2）使用#，可表示1-6级标题。 &gt; # 一级标题\n&gt; ## 二级标题\n&gt; ### 三级标题\n&gt; #### 四级标题\n&gt; ##### 五级标题\n&gt; ###### 六级标题\n效果： &gt; # 一级标题\n&gt; ## 二级标题\n&gt; ### 三级标题\n&gt; #### 四级标题\n&gt; ##### 五级标题\n&gt; ###### 六级标题\n4.2 段落\n段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。\n4.3 区块引用\n在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用，如： &gt; &gt; 区块引用\n&gt; &gt;&gt; 嵌套引用\n效果： &gt; 区块引用\n&gt;&gt; 嵌套引用\n4.4 代码区块\n代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如\n普通段落：\nvoid main()\n{\nprintf(\"Hello, Markdown.\");\n}\n代码区块：\nvoid main()\n{\n    printf(\"Hello, Markdown.\");\n}\n注意:需要和普通段落之间存在空行。\n4.5 强调\n在强调内容两侧分别加上*或者_，如： &gt; *斜体*，_斜体_\n&gt; **粗体**，__粗体__\n效果： &gt; 斜体，斜体\n&gt; 粗体，粗体\n4.6 列表\n使用·、+、或-标记无序列表，如： &gt; -（+*） 第一项 &gt; -（+*） 第二项 &gt; - （+*）第三项\n注意：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。\n效果： &gt; + 第一项 &gt; + 第二项 &gt; + 第三项\n有序列表的标记方式是将上述的符号换成数字,并辅以.，如： &gt; 1 . 第一项\n&gt; 2 . 第二项\n&gt; 3 . 第三项\n效果： &gt; 1. 第一项 &gt; 2. 第二项 &gt; 3. 第三项\n4.7 分割线\n分割线最常使用就是三个或以上*，还可以使用-和_。\n4.8 链接\n链接可以由两种形式生成：行内式和参考式。\n行内式： &gt; [younghz的Markdown库](https:://github.com/younghz/Markdown \"Markdown\")。\n效果： &gt; younghz的Markdown库。\n参考式： &gt; [younghz的Markdown库1][1]\n&gt; [younghz的Markdown库2][2]\n&gt; [1]:https:://github.com/younghz/Markdown \"Markdown\"\n&gt; [2]:https:://github.com/younghz/Markdown \"Markdown\"\n效果： &gt; younghz的Markdown库1\n&gt; younghz的Markdown库2\n注意：上述的[1]:https:://github.com/younghz/Markdown \"Markdown\"不出现在区块中。\n4.9 图片\n添加图片的形式和链接相似，只需在链接的基础上前方加一个！。 #### 4.10 反斜杠\\ 相当于反转义作用。使符号成为普通符号。 #### 4.11 符号'' 起到标记作用。如： &gt;\\ctrl+a`\n效果： &gt;ctrl+a\n5. 谁在用？\nMarkdown的使用者： + GitHub + 简书 + Stack Overflow + Apollo + Moodle + Reddit + 等等\n6. 尝试一下\n\nChrome下的插件诸如stackedit与markdown-here等非常方便，也不用担心平台受限。\n在线的dillinger.io评价也不错\n\nWindowns下的MarkdownPad也用过，不过免费版的体验不是很好。\n\nMac下的Mou是国人贡献的，口碑很好。\nLinux下的ReText不错。\n\n当然，最终境界永远都是笔下是语法，心中格式化 :)。\n\n注意：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。 虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber] (http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/ )。 **** 以上基本是所有traditonal markdown的语法。\n其它：\n列表的使用(非traditonal markdown)：\n用|表示表格纵向边界，表头和表内容用-隔开，并可用:进行对齐设置，两边都有:则表示居中，若不加:则默认左对齐。\n\n\n\n代码库\n链接\n\n\n\n\nMarkDown\nhttps://github.com/younghz/Markdown\n\n\nMarkDownCopy\nhttps://github.com/younghz/Markdown\n\n\n\n关于其它扩展语法可参见具体工具的使用说明。\n","categories":["A","test"],"tags":["PS3","Games","Test"]},{"title":"Test/统计","url":"/2022/04/26/%E7%BB%9F%E8%AE%A1%202/","content":"一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n一二三四五六七八九十\n","categories":["B"],"tags":["PS3","Games"]},{"title":"Test/T","url":"/2022/04/26/%E7%BB%9F%E8%AE%A1%E5%86%B3%E7%AD%96%E6%96%B9%E6%B3%95/","content":"\n概念\n先验概率/后验概率/类条件密度\n贝叶斯决策：\n 两类问题，错误率定义为所有服从同样分布的独立样本上错误概率的期望,正确率 如果决策如果决策\n最小错误率贝叶斯决策\n则\n后验概率可由贝叶斯公式求得  引入似然比阀值，决策规则整理成： 则 常引入对数似然比 则 利用贝叶斯公式求得决策线/决策面：\n\n错误率分析：  第一类样本决策为第二类的错误率：  第二类样本决策为第一类的错误率：  多类情况下，最小错误率贝叶斯决策的原理是一样的，通过正确率计算错误率。决策规则为： \n最小风险贝叶斯决策\n一种考虑各种错误造成损失不同时的一种最优决策。\n\nimage-20220423133935259\n\n采取决策的期望损失：  最小化期望风险  即 则 特别的，在实际是两类且决策也是两类时 则 引入似然比 ，则\n两类错误率，Neyman-Pearson决策与ROC曲线\n混淆矩阵：\n\nimage-20220423140636683\n\n灵敏度： 特异度： 假阳性/第一类错误率   假阴性/第二类错误率  \nNeyman-Pearson决策：固定一类错误率、使另一类错误率尽可能小  Lagrange乘子法  有  分别对和决策边界求导得  且  ，则有决策规则： 则  常需用数值方法求得,通过的映射关系，可由求得 ，并调节  大小得到合适的错误率。 \nROC 曲线：通过设定不同的阀值画出单独用一个特征作为指标划分两类时的ROC曲线 AUC (Area Under ROC Curves)：计算AUC并通过比较不同特征间的AUC来得知哪个特征包含更多的分类信息。此外，从整体上看AUC越接近1.0，方法的性能越好。\n\n正态分布下的统计决策\n多元正态分布：  期望   边缘分布   协方差矩阵总是对称非负定阵，现仅考虑为正定阵的情况。  多元正态分布的性质： 1,参数 和对分布的决定性 2,等密度点的轨迹为一超椭球面 主轴方向由的本征向量所决定，主轴的长度与的本征值成正比。总体区域中心由确定，大小由确定.等密度点轨迹是由 到的 Mahalanobis 距离为常数的超椭球面。其大小是样本对于均值向量的离散度度量。 \n\n3,不相关性等价于独立性 如果多元正态随机向量的协方差阵是对角阵，则的分量是相互独立的正态分布随机变量。 4,边缘分布和条件分布的正态性 多元正态分布的边缘分布和条件分布仍然是正态分布。 5,线性变换的正态性  由于为对称阵，则总可以找到非奇异阵使得各随机变量在新的坐标系中是独立的 6,线性组合的正态性 \n正态分布概率模型下的最小错误率贝叶斯决策：\n在多元正态概率型下,判别函数为：  决策面方程 即\n\n知决策面是的二次型，当各协方差阵相等时，决策面就变成的线性函数,其决策规则简化为：  可知服从一维正态分布,对于 , 可计算出决定一维正态分布的参数均值  及方差  :  同样对于  :  因此, 可以利用  及  计算出  和  : 其中 \n高维独立随机变量时错误率的估计：\n当维随机向量的分量间相互独立时:  负对数似然比   其中  根据独立性假设和中心极限定理,  较大时无论  密度函数如何，  的密度函数总是趋于正态分布, 由此可得  的均值  及方差  ：  由于  和  都是一维随机变量  的函数,在大多数情况下,计算这些参数相对比较容易, 即使非正态情况亦是如此。所以可以把  近似看成是服从  的一维正态分布的随机变量,再近似算出错误率。\n离散概率模型下的统计决策举例\n马尔可夫模型（MarkovModel） 一阶马尔可夫链:第  时刻上的取值仅依赖于第  时刻的取值  转移概率(Transition Probability)  对一个长度为  的序列，我们观察到这个序列的概率是  DNA 序列每一位置有四种状态,转移概率就是一个  的矩阵,称作状态转移矩阵。\n\n\n\n在岛的识别中，把岛一类记作 “  \", 马尔可夫转移概率记作 ，把非岛一类记作\"-\"，马尔可夫转移概率记作 。为方便计算采用对数似然比 (log likelihood ratio)也叫对数几率比(log-odds ratio)。  两类的转移概率密度可由下式估计： 和\n\n\n\n阈值选取： 在估计出具体模型的参数后，识别阶段做的事情与连续变量情况是一样的，就是根据模型在不同类别下计算观测到待识别样本的似然比，按照适当的阈值做出决策。通常阚值的选取可以根据先验概率，也可以根据最小风险的原则确定，或者根据对两类错误率的特殊要求决定。如果两类的先验概率相同且两类错误的损失相同，则对数似然比决策的阈值就是0。在这里，由于概率模型是用数值方法估计的，很难从理论上计算错误率。 在实际应用中，常把训练数据代到中，统计所有训练样本的似然比取值的分布。选用不同的阈值来做决策就会导致不同的错误情况，可从直方图上确定满意的阈值，或者通过变动不同阈值画出ROC曲线来决定阈值选择。此外，以上没有考虑起始和终止状态的问题。实际上，由于面对的序列片段都是从更长的序列中截取的，一般情况下对截取的位置并没有针对单个核苷酸特别地控制，因此起始和结束的概率就可以用基因组上出现各个核苷酸的概率来代替。如果在某些场景下需要更精确地控制片段的起始和结束，那么用同样的方法可以估计起始和终止的转移概率。\n隐马尔可夫模型（HMM）\n\n对前  个位置,  表示当第  位置对应隐状态为  时可能得到的最大概率。  递归形式:  最大似然路径 可通过回溯的方法求得，  并且  这种做法叫做Viterbi算法\n统计学习方法！！！！\n","categories":["A","Games","Life"],"tags":["PS3","Games"]}]